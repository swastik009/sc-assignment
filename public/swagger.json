{
  "openapi": "3.0.0",
  "info": {
    "title": "ShiftCare API",
    "version": "1.0.0",
    "description": "API for searching, listing, and finding duplicate clients."
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/api/keys": {
      "get": {
        "summary": "List all searchable fields",
        "tags": ["Clients"],
        "responses": {
          "200": {
            "description": "A list of fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/list": {
      "get": {
        "summary": "List all clients (paginated)",
        "tags": ["Clients"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of clients",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedClients"
                }
              }
            }
          }
        }
      }
    },
    "/api/duplicates": {
      "get": {
        "summary": "List clients with duplicate emails (paginated)",
        "tags": ["Clients"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of duplicates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedClients"
                }
              }
            }
          }
        }
      }
    },
    "/api/search": {
      "get": {
        "summary": "Search clients by field and query (paginated)",
        "tags": ["Clients"],
        "parameters": [
          {
            "name": "field",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedClients"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": ["id", "name", "email"]
      },
      "PaginatedClients": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Client"
            }
          }
        },
        "required": ["page", "per_page", "total", "clients"]
      }
    }
  }
}